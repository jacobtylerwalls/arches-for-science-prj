name: CI

on: 
  # push: -- just run on PRs for now
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:13-3.0
        env:
          POSTGRES_PASSWORD: postgis
          POSTGRES_DB: arches
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Check out arches
        uses: actions/checkout@v2
        with:
          repository: archesproject/arches
          ref: dev/7.4.x
          path: arches

      - name: Check out arches-templating
        uses: actions/checkout@v2
        with:
          repository: archesproject/arches-templating
          path: arches-templating

      - name: Check out afs
        uses: actions/checkout@v2
        with:
          path: afs

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install python packages
        working-directory: arches
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install -r arches/install/requirements_dev.txt
          echo Python packages installed

      - name: Install arches-templating
        working-directory: arches-templating
        run: |
          pip install .

      - name: Install Java, GDAL, and other system dependencies
        run: |
          sudo apt update
          sudo apt-get install libxml2-dev libpq-dev openjdk-8-jdk libgdal-dev
          echo Postgres and ES dependencies installed

      - uses: ankane/setup-elasticsearch@v1
        with:
          elasticsearch-version: 8

      - name: Run afs unit tests
        working-directory: afs
        run: |
          cp ../arches/tests/test_settings.py afs/test_settings.py
          python3 manage.py test afs.tests --settings=afs.test_settings
